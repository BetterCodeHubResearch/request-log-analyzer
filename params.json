{"name":"request-log-analyzer","tagline":"Create reports based on your log files.","body":"# Request-log-analyzer\r\n\r\nThis is a simple command line tool to analyze request log files in various formats to produce a performance report. Its purpose is to find what actions are best candidates for optimization.\r\n\r\n* Analyzes log files. Currently supports: Amazon S3, Apache, Delayed::Job, Merb, Mysql, PostgreSQL, Rack, Rails and more.\r\n* Combines multiple files and decompresses compressed files, which comes in handy if you are using logrotate.\r\n* Uses several metrics, including cumulative request time, mean request time, process blockers, database and rendering time, HTTP methods and statuses, Rails action cache statistics, etc.) (Sample output: http://github.com/wvanbergen/request-log-analyzer/wiki/sample-output)\r\n* Low memory footprint and reasonably fast, so it is safe to run on a production server.\r\n* MIT licensed\r\n* Runs on all rubies <img src=\"https://secure.travis-ci.org/wvanbergen/request-log-analyzer.png\" />\r\n\r\nSee the project wiki at http://github.com/wvanbergen/request-log-analyzer/wiki for documentation and additional information.\r\n\r\n## Installation & basic usage\r\n\r\nInstall request-log-analyzer as a Ruby gem (you might need to run this command\r\nas root by prepending +sudo+ to it):\r\n\r\n  $ gem install request-log-analyzer\r\n\r\nTo analyze a Rails log file and produce a performance report, run\r\nrequest-log-analyzer like this:\r\n\r\n  $ request-log-analyzer log/production.log\r\n\r\nFor more details, other file formats, and available command line options, see the project's wiki at http://github.com/wvanbergen/request-log-analyzer/wiki\r\n\r\n## Benchmarking on different rubies\r\n\r\n  $ time ./bin/request-log-analyzer 40MBRailsFile.log\r\n\r\n  ruby-1.9.2-p180   15.19s user 0.95s system 99% cpu 16.143 total\r\n  ree-1.8.7-2011.03 22.81s user 1.28s system 92% cpu 25.938 total\r\n  ruby-1.8.7-p334   25.21s user 1.02s system 99% cpu 26.238 total\r\n  jruby-1.5.3       32.64s user 4.84s system 99% cpu 37.629 total\r\n  rbx-2.0.0pre      39.62s user 2.24s system 104% cpu 40.098 total\r\n  macruby           75.00s user 20.10s system 110% cpu 1:26.13 total\r\n\r\n## Additional information\r\n\r\nRequest-log-analyzer was designed and built by Willem van Bergen and Bart ten\r\nBrinke.\r\n\r\nDo you have a rails application that is not performing as it should? If you need\r\nan expert to analyze your application, feel free to contact either Willem van\r\nBergen (willem@railsdoctors.com) or Bart ten Brinke (bart@railsdoctors.com).\r\n\r\n* Project wiki at GitHub: http://github.com/wvanbergen/request-log-analyzer/wiki\r\n* Issue tracker at GitHub: http://github.com/wvanbergen/request-log-analyzer/issues\r\n* railsdoctors homepage: http://railsdoctors.com","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}